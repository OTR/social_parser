name: CI/CD Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH for the VDS
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VDS_SSH_KEY }}

      # Verify the SSH key is loaded
      - name: Verify SSH Key
        run: ssh-add -l

      # Deploy application to VDS
      - name: Deploy to VDS
        env:
          VDS_USER: ${{ secrets.VDS_USER }}
          VDS_IP: ${{ secrets.VDS_IP }}
          VDS_PROJECT_DIR: ${{ secrets.VDS_PROJECT_DIR }}
        run: |
          ssh -o StrictHostKeyChecking=no $VDS_USER@$VDS_IP << 'EOF'
            cd /home/bot/social_parser && \
            git pull origin main && \
            docker build -f .docker/remote_postgres/Dockerfile --tag my-python:3.12
            export BRANCH=master
            docker build --tag social_parser:$BRANCH .
            docker-compose -f ./.docker/remote_postgres/docker-compose.yml down && \
            docker-compose -f ./.docker/remote_postgres/docker-compose.yml up -d --build && \
            docker-compose exec -T web python manage.py migrate --settings=config.settings.postgres_settings && \
            docker-compose exec -T web python manage.py create_superuser && \
            docker-compose exec -T web python manage.py collectstatic --noinput --settings=config.settings.postgres_settings && \
            docker-compose exec -T web gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3
          EOF
